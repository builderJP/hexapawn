@startuml
'https://plantuml.com/class-diagram


abstract class AbstractPawn{
    direction
    # {field} pawnID = 0
    type = BLANK_SPACE
    attack(isAttackingLeft)
    move()
}

class PlayerPawn{
    direction = up
    # pawnID = 1, 2, or 3
    type = PLAYER
}

class AIPawn{
    direction = down
    # pawnID = -1, -2, or -3
    type = AI
}

class HexapawnBoard{
    # AbstractPawn board[3][3]
    # move(pawnID)
    # attack(isAttackingLeft)
    - checkForWinner()
    # returnBoard()
}

class boardDrawer{

}

class Main{

}

enum PawnTypes{
    PLAYER
    AI
    BLANK_SPACE
}

enum Directions{
    FORWARDS
    BACKWARDS
}

boardDrawer "Gets board" <--o Main
Main o-- HexapawnBoard
HexapawnBoard "1" o-- "many" AbstractPawn : contains
AbstractPawn <|-- PlayerPawn
AbstractPawn <|-- AIPawn

@enduml