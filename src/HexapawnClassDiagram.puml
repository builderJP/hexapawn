@startuml
'https://plantuml.com/class-diagram


abstract class AbstractPawn{
    direction
    {field} pawnID
    type
    attack(isAttackingLeft)
    move()
}

class PlayerPawn{
    direction = up
    # pawnID = 1, 2, or 3
    type = PLAYER
}

class AIPawn{
    direction = down
    # pawnID = -1, -2, or -3
    type = AI
}

class HexapawnBoard{
    # AbstractPawn board[3][3]
    # move(pawnID)
    # attack(pawnID, isAttackingLeft)
    # checkForWinner()
    # returnBoard()
    # resetBoard()
}

class BoardDrawer{
    # drawBoard()
}

class Main{

}

enum PawnTypes{
    PLAYER
    AI
    BLANK_SPACE
}

enum Directions{
    FORWARDS
    BACKWARDS
}

BoardDrawer "Gets board" <--o Main
Main o-- HexapawnBoard
HexapawnBoard "1" o-- "many" AbstractPawn : contains
AbstractPawn <|-- PlayerPawn
AbstractPawn <|-- AIPawn

hide PlayerPawn
hide AIPawn
hide AbstractPawn methods

@enduml