@startuml
'https://plantuml.com/class-diagram


abstract class Pawn{
    - direction
    - {field} pawnID
    - type
    attack(isAttackingLeft)
    move()
}

class PlayerPawn{
    direction = up
    # pawnID = 1, 2, or 3
    type = PLAYER
}

class AIPawn{
    direction = down
    # pawnID = -1, -2, or -3
    type = AI
}

class HexapawnBoard{
    - Pawn board[3][3]
    # move(pawnID)
    # attack(pawnID, isAttackingLeft)
    # doesWinnerExist()
    # getBoard()
    # resetBoard()
}

class BoardDrawer{
    # {static} drawBoard(Pawn board[3][3])
}

class Main{

}

enum PawnTypes{
    WHITE
    BLACK
    BLANK_SPACE
}

enum Directions{
    FORWARDS
    BACKWARDS
    NONE
}

enum StatesOfGame{
    WHITE_WON
    BLACK_WON
    NO_WINNER
}

Pawn o-- PawnTypes
Pawn o-- Directions
Pawn o-- StatesOfGame
BoardDrawer "Gets board" <--o Main
Main o-- HexapawnBoard
HexapawnBoard "1" o-- "many" Pawn : contains
Pawn <|-- PlayerPawn
Pawn <|-- AIPawn

hide PlayerPawn
hide AIPawn
hide Pawn methods

@enduml